[alias]
  ## Dealing with named stashes
  ssave = stash save
  sshow = "!f() { git stash show stash^{/$*} -p; }; f"
  sapply = "!f() { git stash apply stash^{/$*}; }; f"

  ## Usage: git fixup COMMIT
  ## Like git commit --amend but for older commits
  fixup = "!f() { \
            TARGET=$(git rev-parse "$1"); \
            git commit --fixup=$TARGET ${@:2} && \
            EDITOR=: GIT_SEQUENCE_EDITOR=: git rebase -i --autostash --autosquash $TARGET^; \
           }; f"

  ## List changed files between $REF (or HEAD) and the closest merge
  changed = "!f() { \
              REF=${1:-HEAD}; \
              PARENT=`git rev-list --min-parents=2 --max-count=1 "${REF}^"`; \
              git diff --diff-filter=M --name-only $PARENT..$REF; \
            }; f"

  ## List added files between $REF (or HEAD) and the closest merge
  added = "!f() { \
              REF=${1:-HEAD}; \
              PARENT=`git rev-list --min-parents=2 --max-count=1 "${REF}^"`; \
              git diff --diff-filter=A --name-only $PARENT..$REF; \
            }; f"

  ## List deleted files between $REF (or HEAD) and the closest merge
  deleted = "!f() { \
              REF=${1:-HEAD}; \
              PARENT=`git rev-list --min-parents=2 --max-count=1 "${REF}^"`; \
              git diff --diff-filter=D --name-only $PARENT..$REF; \
            }; f"

  ## List untracked filed
  untracked = "!git ls-files --others --exclude-standard"
